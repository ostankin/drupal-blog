#!/bin/bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
DATA_DIR=$DIR/.data
CONFIG_DIR=$DIR/config.d
TEMPLATES_DIR=$DIR/templates
CREATE_USER_TEMPLATE=$TEMPLATES_DIR/create-user.template
CLEANUP_TEMPLATE=$TEMPLATES_DIR/cleanup.template
BASE_BACKUP_DIR=$DIR/backup
BACKUP_DIR=$BASE_BACKUP_DIR/latest
DB_IMPORT_DIR=.db_import
DATA_DIR=.data
DB_DIR=$DATA_DIR/db
CMS_BASE_DIR=$DATA_DIR/cms
DB_HOST=db
DB_SECRET=.env/db-secret
PWD_GEN_CMD='cat /dev/urandom | tr -dc A-Za-z0-9 | head -c${1:-32};echo;'
TIMESTAMP_CMD='date +%Y%j%H%M%S%N'

#set -x

function replace_field {
  sudo sed -i -e 's/\('\'$2\''\s\+=>\s\+'\''\)[^'\'']*\('\''\)/\1'$3'\2/g' $1
}

function drupal_update_config {
  CMS_SETTINGS=$CMS_DIR/sites/default/settings.php
  sudo chmod u+w $CMS_SETTINGS
  replace_field $CMS_SETTINGS database $DB_NAME
  replace_field $CMS_SETTINGS username $USER_NAME
  replace_field $CMS_SETTINGS password $USER_PASSWORD
  replace_field $CMS_SETTINGS host $DB_HOST
  replace_field $CMS_SETTINGS prefix $TABLE_PREFIX
  sudo chmod a-w $CMS_SETTINGS
}

function generate_root_password {
  MYSQL_ROOT_PASSWORD=$(eval $PWD_GEN_CMD)
  echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" > $DB_SECRET
}

function generate_user_password {
  USER_PASSWORD=$(eval $PWD_GEN_CMD)
}

function iterate_configs {
  for f in "$CONFIG_DIR/*"; do
    source $f
    $1 $f
  done
}

function check_backup {
  echo "Checking backup files for $1..."
  MYSQL_DUMP=$BACKUP_DIR/$BACKUP_NAME"_db.sql.gz"
  CMS_DUMP=$BACKUP_DIR/$BACKUP_NAME"_files.tar.gz"
  if [ ! -f $MYSQL_DUMP ] || [ ! -f $CMS_DUMP ]; then
    echo "At least one of the following backup files are missing:"
    echo $MYSQL_DUMP
    echo $CMS_DUMP
    echo Exiting.
    exit 1
  else
    echo Ok
  fi
}

function restore_from_backup {
  echo "Restoring from $1..."
  CMS_DIR=$CMS_BASE_DIR/$CMS_FILES
  CMS_DUMP=$BACKUP_DIR/$BACKUP_NAME"_files.tar.gz"
  sudo mkdir -p $CMS_DIR
  sudo tar -xzpf $CMS_DUMP -C $CMS_DIR
  generate_user_password
  MYSQL_DUMP=$BACKUP_DIR/$BACKUP_NAME"_db.sql.gz"
  cp $MYSQL_DUMP $DB_IMPORT_DIR/$($TIMESTAMP_CMD).sql.gz
  USER_SQL=$DB_IMPORT_DIR/$($TIMESTAMP_CMD).sql
  cp $CREATE_USER_TEMPLATE $USER_SQL
  sed -i 's/#DATABASE#/'$DB_NAME'/g' $USER_SQL
  sed -i 's/#USERNAME#/'$USER_NAME'/g' $USER_SQL
  sed -i 's/#PASSWORD#/'$USER_PASSWORD'/g' $USER_SQL
  $CMS_NAME"_update_config"
}

iterate_configs check_backup
echo "Restoring from backup will destroy current data. Type 'yes' to proceed."
read CHOICE
case "$CHOICE" in
  "yes")
    echo "Proceeding...";
    ;;
  *)
    echo "Exiting."
    exit
    ;;
esac

echo Bringing down and destroying existing containers...
sudo docker-compose down
sudo mkdir -p $DATA_DIR
sudo mkdir -p $CMS_BASE_DIR
sudo rm -r ${CMS_BASE_DIR?"Barmin prevented"}/*
mkdir -p $DB_IMPORT_DIR
chmod a+w $DB_IMPORT_DIR
rm $DB_IMPORT_DIR/*
iterate_configs restore_from_backup
sudo rm -r ${DB_DIR?"Barmin prevented"}
generate_root_password
cp $CLEANUP_TEMPLATE $DB_IMPORT_DIR/$($TIMESTAMP_CMD).sh
sudo docker-compose up -d
